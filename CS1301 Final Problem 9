#The line below will open a file containing information
#about every pokemon through Generation 7:

pokedex = open('../resource/lib/public/pokedex.csv', 'r')

#We've also provided a sample subset of the data in
#sample.csv.
#
#Each line of the file has 13 values, separated by commas.
#They are: 
#
#
# - Number: The numbered ID of the Pokemon, an integer
# - Name: The name of the Pokemon, a string
# - Type1: The Pokemon's primary type, a string
# - Type2: The Pokemon's secondary type, a string (this
#   may be blank)
# - HP: The Pokemon's HP statistic, an integer in the range
#   1 to 255
# - Attack: The Pokemon's Attack statistic, an integer in
#   the range 1 to 255
# - Defense: The Pokemon's Defense statistic, an integer in
#   the range 1 to 255
# - SpecialAtk: The Pokemon's Special Attack statistic, an
#   integer in the range 1 to 255
# - SpecialDef: The Pokemon's Special Defense statistic, an
#   integer in the range 1 to 255
# - Speed: The Pokemon's Speed statistic, an integer in the
#   range 1 to 255
# - Generation: What generation the Pokemon debuted in, an
#   integer in the range 1 to 7
# - Legendary: Whether the Pokemon is considered "legendary"
#   or not, either TRUE or FALSE
# - Mega: Whether the Pokemon is "Mega" or not, either TRUE
#   or FALSE
#
#Use this dataset to answer the questions below.
#1,Bulbasaur,Grass,Poison,45,49,49,65,65,45,1,FALSE,FALSE
#2,Ivysaur,Grass,Poison,60,62,63,80,80,60,1,FALSE,FALSE

#Here, add any code you want to allow you to answer the
#questions asked below over on edX. This is just a sandbox
#for you to explore the dataset: nothing is required for
#submission here.

lines = pokedex.readlines()[1:]
count = 0
for line in lines:
    row = line.strip().split(",")
    num = int(row[0])
    name = row[1]
    type1 = row[2]
    type2 = row[3]
    hp = int(row[4])
    attack = int(row[5])
    defense = int(row[6])
    specialatk = int(row[7])
    specialdef = int(row[8])
    speed = int(row[9])
    gen = int(row[10])
    legendary = row[11]
    mega = row[12]
    
    if type2 == "":
        count +=1
print(count)

Question 2: 
for line in lines:
    row = line.strip().split(",")
    num = int(row[0])
    name = row[1]
    type1 = row[2]
    type2 = row[3]
    hp = int(row[4])
    attack = int(row[5])
    defense = int(row[6])
    specialatk = int(row[7])
    specialdef = int(row[8])
    speed = int(row[9])
    gen = int(row[10])
    legendary = row[11]
    mega = row[12]
    
    if type1 not in most_type_dict:
        most_type_dict[type1] = most_type_count
    else:
        most_type_dict[type1] += 1  
    
    if type2 not in most_type_dict:
        most_type_dict[type2] = most_type_count
    else:
        most_type_dict[type2] += 1
        
print(most_type_dict)

Question 3: 
lines = pokedex.readlines()[1:]
count = 0
highest_hp = 0
highest_hp_name = ""
for line in lines:
    row = line.strip().split(",")
    num = int(row[0])
    name = row[1]
    type1 = row[2]
    type2 = row[3]
    hp = int(row[4])
    attack = int(row[5])
    defense = int(row[6])
    specialatk = int(row[7])
    specialdef = int(row[8])
    speed = int(row[9])
    gen = int(row[10])
    legendary = row[11]
    mega = row[12]
    
    if hp > highest_hp:
        highest_hp = hp
        highest_hp_name = name
        
print(highest_hp_name)

Question 4: 
lines = pokedex.readlines()[1:]
count = 0
highest_def = 0
highest_def_name = ""
most_type_count = 0
most_type_name = ""
most_type_dict = {}

for line in lines:
    row = line.strip().split(",")
    num = int(row[0])
    name = row[1]
    type1 = row[2]
    type2 = row[3]
    hp = int(row[4])
    attack = int(row[5])
    defense = int(row[6])
    specialatk = int(row[7])
    specialdef = int(row[8])
    speed = int(row[9])
    gen = int(row[10])
    legendary = row[11]
    mega = row[12]
    
    if legendary == "FALSE":
        legendary = False
    elif legendary == "TRUE":
        legendary = True
    if mega == "FALSE":
        mega = False
    elif mega == "TRUE":
        mega = True
    
    if legendary == False and mega == False and defense > highest_def:
        highest_def = defense
        highest_def_name = name
        
print(highest_def_name)

Question 5: 
lines = pokedex.readlines()[1:]
count = 0
highest_def = 0
highest_def_name = ""
most_type_count = 0
most_type_dict = {}
dictionary = {}
lowest_stats = 1000000
lowest_stats_name = ""
most_num = 0
most_type = ""

for line in lines:
    row = line.strip().split(",")
    num = int(row[0])
    name = row[1]
    type1 = row[2]
    type2 = row[3]
    hp = int(row[4])
    attack = int(row[5])
    defense = int(row[6])
    specialatk = int(row[7])
    specialdef = int(row[8])
    speed = int(row[9])
    gen = int(row[10])
    legendary = row[11]
    mega = row[12]
    stats = hp + attack + defense + specialatk + specialdef + speed
    
    if legendary == "FALSE":
        legendary = False
    elif legendary == "TRUE":
        legendary = True
    if mega == "FALSE":
        mega = False
    elif mega == "TRUE":
        mega = True


    if legendary == True and type1 not in most_type_dict:
        most_type_dict[type1] = most_type_count
    elif legendary == True:
        most_type_dict[type1] += 1  
    
    if legendary == True and type2 not in most_type_dict:
        most_type_dict[type2] = most_type_count
    elif legendary == True:
        most_type_dict[type2] += 1
        
for ptype, num in most_type_dict.items():
    if ptype == "":
        pass
    elif num > most_num:
        most_num = num
        most_type = ptype
    
print(most_num)        
print(most_type)

Question 6: 
lines = pokedex.readlines()[1:]
count = 0
highest_def = 0
highest_def_name = ""
most_type_count = 0
most_type_name = ""
most_type_dict = {}
dictionary = {}
lowest_stats = 1000000
lowest_stats_name = ""

for line in lines:
    row = line.strip().split(",")
    num = int(row[0])
    name = row[1]
    type1 = row[2]
    type2 = row[3]
    hp = int(row[4])
    attack = int(row[5])
    defense = int(row[6])
    specialatk = int(row[7])
    specialdef = int(row[8])
    speed = int(row[9])
    gen = int(row[10])
    legendary = row[11]
    mega = row[12]
    stats = hp + attack + defense + specialatk + specialdef + speed
    
    if legendary == "FALSE":
        legendary = False
    elif legendary == "TRUE":
        legendary = True
    if mega == "FALSE":
        mega = False
    elif mega == "TRUE":
        mega = True

    if legendary == True:
        dictionary[name] = stats

for name, stats in dictionary.items():
    if stats < lowest_stats:
        lowest_stats = stats
        lowest_stats_name = name
            
print(lowest_stats_name)

Question 7: 
lines = pokedex.readlines()[1:]
count = 0
highest_def = 0
highest_def_name = ""
most_num = 0
most_dict = {}
most_name = ""
dictionary = {}
lowest_stats = 1000000
lowest_stats_name = ""
most_type = ""


for line in lines:
    row = line.strip().split(",")
    num = int(row[0])
    name = row[1]
    type1 = row[2]
    type2 = row[3]
    hp = int(row[4])
    attack = int(row[5])
    defense = int(row[6])
    specialatk = int(row[7])
    specialdef = int(row[8])
    speed = int(row[9])
    gen = int(row[10])
    legendary = row[11]
    mega = row[12]
    stats = hp + attack + defense + specialatk + specialdef + speed
    
    if legendary == "FALSE":
        legendary = False
    elif legendary == "TRUE":
        legendary = True
    if mega == "FALSE":
        mega = False
    elif mega == "TRUE":
        mega = True


    if legendary == False and mega == False:
        most_dict[name] = stats   
       
for name, num in most_dict.items():
    if num > most_num:
        most_num = num
        most_name = name
    
print(most_num)        
print(most_name)

Question 8:
lines = pokedex.readlines()[1:]
count = 0
highest_def = 0
highest_def_name = ""
most_type_count = 0
most_type_dict = {}
dictionary = {}
lowest_stats = 1000000
lowest_stats_name = ""
most_num = 0
most_type = ""
speed_dict = {}
ave_speed_dict = {}

for line in lines:
    row = line.strip().split(",")
    num = int(row[0])
    name = row[1]
    type1 = row[2]
    type2 = row[3]
    hp = int(row[4])
    attack = int(row[5])
    defense = int(row[6])
    specialatk = int(row[7])
    specialdef = int(row[8])
    speed = int(row[9])
    gen = int(row[10])
    legendary = row[11]
    mega = row[12]
    stats = hp + attack + defense + specialatk + specialdef + speed
    
    if legendary == "FALSE":
        legendary = False
    elif legendary == "TRUE":
        legendary = True
    if mega == "FALSE":
        mega = False
    elif mega == "TRUE":
        mega = True

    if type1 not in speed_dict:
        speed_dict[type1] = speed
        dictionary[type1] = count
    else:
        speed_dict[type1] += speed 
        dictionary[type1] += 1
    
    if type2 not in speed_dict:
        speed_dict[type2] = speed
        dictionary[type2] = count
    else:
        speed_dict[type2] += speed
        dictionary[type2] += 1

#print(speed_dict)        
#print(dictionary)        
        
for ptype, count in dictionary.items():
    if ptype == "":
        pass
    else:
        ave_speed = speed_dict[ptype] / dictionary[ptype]
        ave_speed_dict[ptype] = ave_speed
    
for ptype, speed in ave_speed_dict.items():
    highest_ave_speed = max(ave_speed_dict, key = ave_speed_dict.get)

print(highest_ave_speed)

Question 9:


Question 10: 
lines = pokedex.readlines()[1:]
count = 0
highest_def = 0
highest_def_name = ""
most_type_count = 0
most_type_dict = {}
dictionary = {}
lowest_stats = 1000000
lowest_stats_name = ""
most_num = 0
most_type = ""
speed_dict = {}
ave_speed_dict = {}
stat_dict = {}
ave_stat_dict = {}

for line in lines:
    row = line.strip().split(",")
    num = int(row[0])
    name = row[1]
    type1 = row[2]
    type2 = row[3]
    hp = int(row[4])
    attack = int(row[5])
    defense = int(row[6])
    specialatk = int(row[7])
    specialdef = int(row[8])
    speed = int(row[9])
    gen = int(row[10])
    legendary = row[11]
    mega = row[12]
    stats = hp + attack + defense + specialatk + specialdef + speed
    
    if legendary == "FALSE":
        legendary = False
    elif legendary == "TRUE":
        legendary = True
    if mega == "FALSE":
        mega = False
    elif mega == "TRUE":
        mega = True

    if gen not in stat_dict:
        stat_dict[gen] = stats
        dictionary[gen] = count
    else:
        stat_dict[gen] += stats 
        dictionary[gen] += 1

print(stat_dict)        
print(dictionary)        
        
for gen, count in dictionary.items():
    ave_stat = stat_dict[gen] / dictionary[gen]
    ave_stat_dict[gen] = ave_stat
    
for gen, speed in ave_stat_dict.items():
    highest_ave_stat = max(ave_stat_dict, key = ave_stat_dict.get)

    
print(highest_ave_stat)        
print(ave_stat_dict)
