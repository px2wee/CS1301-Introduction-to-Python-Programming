#-----------------------------------------------------------
#The United States Social Security Administration publishes
#a list of all documented baby names each year, along with
#how often each name was used for boys and for girls. The
#list is used to see what names are most common in a given
#year.
#
#We've grabbed that data for any name used more than 25
#times, and provided it to you in a file called
#babynames.csv. The line below will open the file:
#Isabella,42567,Girl
#Sophia,42261,Girl
#Jacob,42164,Boy
#Emma,35951,Girl

names_file = open('../resource/lib/public/babynames.csv', 'r')

#We've also provided a sample subset of the data in
#sample.csv.
#
#Each line of the file has three values, separated by
#commas. The first value is the name; the second value is
#the number of times the name was given in the 2010s (so
#far); and the third value is whether that count
#corresponds to girls or boys. Note that if a name is
#given to both girls and boys, it is listed twice: for
#example, so far in the 2010s, the name Jamie has been
#given to 611 boys and 1545 girls.
#
#Use this dataset to answer the questions below.

Question 1 and 2:
lines = names_file.readlines()
count = 0
total_birth = 0
for line in lines:
    count += 1
    row = line.strip().split(",")
    name = row[0]
    birth = int(row[1])
    gender = row[2]
    total_birth += birth

print(count, " ", total_birth)    

Question 3: 
lines = names_file.readlines()
count = 0
total_birth = 0
for line in lines:
    row = line.strip().split(",")
    name = row[0]
    birth = int(row[1])
    gender = row[2]
    total_birth += birth
    if name[0] == "Z" and gender == "Boy":
        count += 1

print(count, " ", total_birth)  

Question 4: 
lines = names_file.readlines()
count = 0
highest_name = ""
total_birth = 0
for line in lines:
    row = line.strip().split(",")
    name = row[0]
    birth = int(row[1])
    gender = row[2]
    total_birth += birth
    if name[0] == "Q" and gender == "Girl" and birth > count:
        count = birth
        highest_name = name
        

print(count, " ", highest_name)  

Question 5: 
lines = names_file.readlines()
count = 0
highest_name = ""
total_birth = 0
for line in lines:
    row = line.strip().split(",")
    name = row[0]
    birth = int(row[1])
    gender = row[2]
    total_birth += birth
    if name[0] in "AEIOU" and name[-1] in "aeiou":
        count += birth
        

print(count)   

Question 6, 7, 8, 9: 
for line in lines:
    row = line.strip().split(",")
    name = row[0]
    birth = int(row[1])
    gender = row[2]
    first_letter = name[0]
    
    if first_letter not in name_dict: 
        name_dict[first_letter] = birth
    else: 
        name_dict[first_letter] += birth

    for letter, birthcount in name_dict.items():
        lowest_letter = min(name_dict, key = name_dict.get)
        highest_letter = max(name_dict, key = name_dict.get)
        
print(lowest_letter, name_dict["U"]) 
print(highest_letter, name_dict["A"])    

Question 10 and 11: 
lines = names_file.readlines()
count = 0
highest_name = ""
total_birth = 0
name_dict = {}
for line in lines:
    row = line.strip().split(",")
    name = row[0]
    birth = int(row[1])
    gender = row[2]
    first_letter = name[0]
    
    if name not in name_dict: 
        name_dict[name] = birth
    else: 
        name_dict[name] += birth
    
    highest_name = max(name_dict, key=name_dict.get)
 
print(highest_name, name_dict["Isabella"])  

Question 12:
lines = names_file.readlines()
count = 0
highest_name = ""
total_birth = 0
name_dict = {}
b_name_dict = {}
g_name_dict = {}
for line in lines:
    row = line.strip().split(",")
    name = row[0]
    birth = int(row[1])
    gender = row[2]
    first_letter = name[0]
    
    if gender == "Boy" and name not in name_dict: 
        b_name_dict[name] = birth
    elif gender == "Girl" and name not in name_dict: 
        g_name_dict[name] = birth
    elif gender == "Boy":
        b_name_dict[name] += birth
    elif gender == "Girl": 
        g_name_dict[name] += birth
    
    lowest_diff_name = ""
    lowest_diff = 1000000
    for name in b_name_dict:
        if name in g_name_dict:
            diff = abs(b_name_dict[name] - g_name_dict[name])
            if diff < lowest_diff:
                lowest_diff_name = name
                lowest_diff = diff

print(lowest_diff_name, lowest_diff)

#Here, add any code you want to allow you to answer the
#questions asked below over on edX. This is just a sandbox
#for you to explore the dataset: nothing is required for
#submission here.





